---

- name: ACI Infra Build
  hosts: apic
  gather_facts: False
  connection: local

  vars_prompt:
  - name: ref_prompt
    prompt: "CR Number"
    private: no

  tasks: 
    - name: "Task 1: Gather Login info"
      include_vars: auth/secrets.yml

    - name: "Task 2: Gathr Reference Number"
      set_fact:
        reference: "{{ ref_prompt }}"
    
    - name: "Task 3: Set user/pass info"
      set_fact:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"

    - name: "Task 4: Update '{{ inventory_hostname }}'' from CSV"
      include: csv_net_vars.yml

    - name: "Task 5: Add Var File"
      include_vars: host_vars/vars.yml

#    - name: "Task 6: Create a Snapshot"
#      aci_config_snapshot:
#        host: "{{ inventory_hostname }}"
#        username: "{{ username }}"
#        password: "{{ password }}"
#        state: present
#        export_policy: ansible_snapshot
#        max_count: 10
#        description: Automation snapshot before configs

#    - name: "Task 7: Create New Tenant"
#      aci_tenant:
#        host: "{{ inventory_hostname }}"
#        username: "{{ username }}"
#        password: "{{ password }}" 
#        tenant: "{{ item.name }}"
#        description: "{{ item.description }}"
#        state: "{{ item.state }}"
#        validate_certs: False

#      register: tenant_output

#      when: (item.state == "present" or item.state == "absent" or item.state == "ignore")

#      with_items:
#        - "{{ tns }}"
      
#    - debug: var=tenant_output

#    - name: "Task 8: Add VRF to a tenant"
#      aci_vrf:
#        host: "{{ inventory_hostname }}"
#        username: "{{ username }}"
#        password: "{{ password }}"
#        tenant: "{{ item.tenant }}"
#        vrf: "{{ item.name }}"
#        descr: Lab VRF
#        policy_control_preference: "{{ item.policy_control_preference }}"
#       policy_control_direction: "{{ item.policy_control_direction }}"
#        state: "{{ item.state }}"
#        validate_certs: False
      
#      register: vrf_output

#      when: (item.state == "present" or item.state == "absent" or item.state == "ignore")

#      with_items:
#        - "{{ vrfs }}"
    
#    - debug: var=vrf_output

#    - name: "Task 9: Add a new contract to tenant"
#      aci_contract:
#        host: "{{ inventory_hostname }}"
#        username: "{{ username }}" 
#        password: "{{ password }}"
#        tenant: "{{ item.tenant }}"
#       contract: "{{ item.name }}"
#       description: Communication between APPs
#       scope: "{{ item.scope }}"
#        state: "{{ item.state }}"
#        validate_certs: False

#      register: contract_output

#      when: (item.state == "present" or item.state == "absent" or item.state == "ignore")

#      with_items:
#        - "{{ cons }}"
    
#    - debug: var=contract_output
    
    - name: "Task 10: Change 'present' to 'query' "
      replace: 
        path: host_vars/vars.yml
        regexp: 'state: present'
        replace: 'state: query'
        before: '#EOS'

    - name: "Task 11: Change 'absent' to 'query' "
      replace: 
        path: host_vars/vars.yml
        regexp: 'state: present'
        replace: 'state: query'
        before: '#EOS'
    
    - name: "Task 12: Copy var file to new location"
      copy: 
        src: host_vars/vars.yml
        dest: completed_plays/{{reference}}-vars_play.yml
        mode: preserve
    
    - name: "Task 13: Clear contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "#{{ reference }}-TN"
#        block:  "#"
        state: absent
        insertbefore: "vrfs"






