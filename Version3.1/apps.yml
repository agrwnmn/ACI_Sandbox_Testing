---

- name: ACI Apps Build
  hosts: apic
  gather_facts: False
  connection: local

  vars_prompt:
  - name: ref_prompt
    prompt: "CR Number"
    private: no

  tasks: 
    - name: "Task 1: Gather Login info"
      include_vars: auth/secrets.yml

    - name: "Task 2: Gather Reference Number"
      set_fact:
        reference: "{{ ref_prompt }}"  

    - name: "Task 3: Set user/pass info"
      set_fact:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"

    - name: "Task 4: Update '{{ inventory_hostname }}'' from CSV"
      include: csv_app_vars.yml

    - name: "Task 5: Add Var File"
      include_vars: host_vars/vars.yml

    - name: "Task 6: Create a Snapshot"
      aci_config_snapshot:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: present
        export_policy: ansible_snapshot
        max_count: 10
        validate_certs: no
        description: Automation snapshot before configs

    - name: "Task 7: Add a new AP"
      aci_ap:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        ap: "{{ item.name }}"
        description: "{{ item.description }}"
        state: "{{ item.state }}"
        validate_certs: no
      register: app_output
      when: (item.state == "present" or item.state == "absent" or item.state == "ignore")

      with_items:
        - "{{ apps }}"

    - debug: var=app_output

    - name: "Task 8: Add Bridge Domain"
      aci_bd:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: no
        tenant: "{{ item.tenant }}"
        bd: "{{ item.name }}"
        vrf: "{{ item.vrf }}"
        state: "{{ item.state }}"
      register: bd_out

      when: (item.state == "present" or item.state == "absent" or item.state == "ignore")

      with_items: 
        - "{{ bds }}"

    - name: "Task 9: Add a new EPG"
      aci_epg:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        ap: "{{ item.ap }}"
        epg: "{{ item.name }}"
        description: "{{ item.description }}"
        bd: "{{ item.bd }}"
        preferred_group: "{{ item.preferred_group }}"
        state: "{{ item.state }}"
        validate_certs: no
      register: epg_out

      when: (item.state == "present" or item.state == "absent" or item.state == "ignore")

      with_items:
        - "{{ epgs }}"
      
    - debug: var=epg_out

    - name: "Task 10: Create a subnet"
      aci_bd_subnet:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        bd: "{{ item.bd }}"
        gateway: "{{ item.gateway }}"
        mask: "{{ item.mask }}"
        scope: "{{ item.scope }}"
        state: "{{ item.state }}"
        validate_certs: no
      register: subs_out

      when: (item.state == "present" or item.state == "absent" or item.state == "ignore")

      with_items:
        - "{{ subs }}"
    - debug: var=subs_out

    - name: "Task 11: Add a new Provider contract to EPG binding"
      aci_epg_to_contract:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        ap: "{{ item.ap }}"
        epg: "{{ item.epg }}"
        contract: "{{ item.contract }}"
        contract_type: "{{ item.contract_type }}"
        state: "{{ item.state }}"
        validate_certs: no
      register: binding_out

      when: (item.state == "present" or item.state == "absent" or item.state == "ignore")

      with_items:
        - "{{ provided_con_bindings }}"

    - debug: var=binding_out

    - name: "Task 12: Add a new Consumed contract to EPG binding"
      aci_epg_to_contract:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        ap: "{{ item.ap }}"
        epg: "{{ item.epg }}"
        contract: "{{ item.contract }}"
        contract_type: "{{ item.contract_type }}"
        state: "{{ item.state }}"
        validate_certs: no
      register: consumed_binding_out

      when: (item.state == "present" or item.state == "absent" or item.state == "ignore")

      with_items:
        - "{{ consumed_con_bindings }}"

    - debug: var=consumed_binding_out

    - name: "Task 13: Add domain to EPG binding"
      aci_epg_to_domain:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        ap: "{{ item.ap }}"
        epg: "{{ item.epg }}"
        domain: "{{ item.domain }}"
        domain_type: "{{ item.domain_type }}"
        vm_provider: "{{ item.vm_provider }}"
        deploy_immediacy: "{{ item.deploy_immediacy }}"
        resolution_immediacy: "{{ item.resolution_immediacy }}"
        state: "{{ item.state }}"
        validate_certs: no
      register: domain_output

      when: (item.state == "present" or item.state == "absent" or item.state == "ignore")

      with_items: 
        - "{{ domains }}"
    - debug: var=domain_output

    - name: "Task 14: Bind BD to L3out"
      aci_bd_to_l3out:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        bd: "{{ item.bd }}"
        l3out: "{{ item.l3out }}"
        state: "{{ item.state }}"
        validate_certs: no
      register: l3out_output

      when: (item.state == "present" or item.state == "absent" or item.state == "ignore")

      with_items:
        - "{{ l3outs }}"
    
    - debug: var=l3out_output

    - name: "Task 14: Bind BD to L3out(2)"
      aci_bd_to_l3out:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        bd: "{{ item.bd }}"
        l3out: "{{ item.l3out }}"
        state: "{{ item.state }}"
        validate_certs: no
      register: l3out_output

      when: (item.state == "present" or item.state == "absent" or item.state == "ignore")

      with_items:
        - "{{ l3outs2 }}"
    
    - debug: var=l3out_output

    - name: "Task 15: Change 'present' to 'query' "
      replace: 
        path: host_vars/vars.yml
        regexp: 'state: present'
        replace: 'state: query'
        after: 'apps'

    - name: "Task 16: Change 'absent' to 'query' "
      replace: 
        path: host_vars/vars.yml
        regexp: 'state: present'
        replace: 'state: query'
        after: 'apps'

    - name: "Task 17: Copy var file to new location"
      copy: 
        src: host_vars/vars.yml
        dest: completed_plays/{{reference}}-vars_play.yml
        mode: preserve

    - name: "Task 18: Clear Apps contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible App Section"
        state: absent

    - name: "Task 19: Clear BDs contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible BD Section"
        state: absent

    - name: "Task 20: Clear EPGs contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible EPG Section"
        state: absent

    - name: "Task 21: Clear Subs contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible Subnet Section"
        state: absent

    - name: "Task 22: Clear Con_Bindings contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible Contract_Binding Section"
        state: absent

    - name: "Task 23: Clear Consumed_Con_Bindings contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible Consumed Contract_Binding Section"
        state: absent


    - name: "Task 24: Clear Domains contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible Domain Section"
        state: absent

    - name: "Task 25: Clear L3Outs contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible L3out Section"
        state: absent

    - name: "Task 25: Clear 2nd L3Outs contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible L3out2 Section"
        state: absent