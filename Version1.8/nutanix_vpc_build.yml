---

- name: ACI Nutanix Build
  hosts: apic
  gather_facts: False
  ignore_errors: Yes
  connection: local

  vars_prompt:
  - name: ref_prompt
    prompt: "CR Number"
    private: no  

  tasks: 
    - name: "Task 1: Gather Login info"
      include_vars: auth/secrets.yml
  
    - name: "Task 2: Gather Reference Number"
      set_fact:
        reference: "{{ ref_prompt }}"
    
    - name: "Task 3: Set user/pass info"
      set_fact:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"

    - name: "Task 4: Update '{{ inventory_hostname }}'' from CSV"
      include: csv_nutanix_vpc_vars.yml

    - name: "Task 5: Add Var File"
      include_vars: host_vars/vars.yml

    - name: "Task 6: Create a Snapshot"
      aci_config_snapshot:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: present
        export_policy: ansible_snapshot
        max_count: 10
        description: Automation snapshot before configs

#    - name: "Task 7: Create Attached Entity Profiles"
#      aci_aep:
#        host: "{{ inventory_hostname }}"
#        username: "{{ username }}"
#        password: "{{ password }}"
#        aep: "{{ item.name }}"
#        state: "{{ item.state }}"
#      register: aep_result

#      when: (item.state == "present" or item.state == "absent" or item.state == "query")

#      with_items:
#        - "{{ aep }}"

#    - name: "Task 8: Create CDP Interface Policy"
#      aci_interface_policy_cdp:
#        host: "{{ inventory_hostname }}"
#        username: "{{ username }}"
#        password: "{{ password }}"
#        cdp_policy: "{{ item.name }}"
#        state: "{{ item.state }}"
#      register: cdp_result

#      when: (item.state == "present" or item.state == "absent" or item.state == "query")

#     with_items:
#       - "{{ cdp }}"

#    - name: "Task 9: Create LLDP Interface Policy"
#      aci_interface_policy_lldp:
#        host: "{{ inventory_hostname }}"
#        username: "{{ username }}"
#        password: "{{ password }}"
#        lldp_policy: "{{ item.name }}"
#        receive_state: "{{ item.receive_state }}"
#        transmit_state: "{{ item.transmit_state }}"
#        state: "{{ item.state }}"
#      register: lldp_result

#      when: (item.state == "present" or item.state == "absent" or item.state == "query")

#      with_items:
#        - "{{ lldp }}"

#    - name: "Task 10: Create Port-Channel Policy"
#      aci_interface_policy_port_channel:
#        host: "{{ inventory_hostname }}"
#        username: "{{ username }}"
#        password: "{{ password }}"
#        port_channel: '{{ item.name }}'
#        mode: '{{ item.mode }}'
#        state: "{{ item.state }}"
#      register: pc_result

#      when: (item.state == "present" or item.state == "absent" or item.state == "query")

#      with_items:
#        - "{{ port_channel }}"

#    - debug: var=pc_result

    - name: "Task 11: Create VPC Port-Group Policy"
      aci_interface_policy_leaf_policy_group:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        policy_group: "{{ item.name }}"
        lag_type: "{{ item.lag_type }}"
        link_level_policy: "{{ item.link_level_policy }}"
        port_channel_policy: "{{ item.port_channel_policy }}"
        lldp_policy: "{{ item.lldp_policy }}"
        cdp_policy: "{{ item.cdp_policy }}"
        aep: "{{ item.aep }}"
        state: "{{ item.state }}"
      register: leaf_access_result

      when: (item.state == "present" or item.state == "absent" or item.state == "query")

      with_items:
        - "{{ vpc_port_group }}"

    - debug: var=leaf_access_result

    - name: "Task 12: Create interface access port selector"
      aci_access_port_to_interface_policy_leaf_profile:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        leaf_interface_profile: "{{ item.leaf_interface_profile }}"
        access_port_selector: "{{ item.name }}"
        leaf_port_blk: "{{ item.leaf_port_blk }}"
        from_port: "{{ item.from_port }}"
        to_port: "{{ item.to_port }}"
        policy_group: "{{ item.policy_group }}"
        state: present
      register: access_ports
      when: (item.state == "present" or item.state == "absent" or item.state == "query")

      with_items:
        - "{{ access_ports }}"

    - debug: var=access_ports

    - name: "Task 13: Add vPC Protection Group"
      aci_switch_policy_vpc_protection_group:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        protection_group: "{{ item.name }}"
        protection_group_id: "{{ item.protection_group_id }}"
        switch_1_id: "{{ item.switch_1_id }}"
        switch_2_id: "{{ item.switch_2_id }}"
        state: "{{ item.state }}"
      register: vpc_group
      when: (item.state == "present" or item.state == "absent" or item.state == "query")

      with_items:
        - "{{ vPC_pg }}"

    - name: "Task 14: Deploy Static Path binding for given EPG"
      aci_static_binding_to_epg:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: Shore-Test-1
        ap: app-1555
        epg: app-1555_App-epg
        encap_id: 222
        deploy_immediacy: immediate
        interface_mode: trunk
        interface_type: switch_port
        pod_id: 1
        leafs: 101
        interface: '1/7'
        state: present
      register: static_assigned

    - debug: var=static_assigned

    - name: "Task 14: Change 'present' to 'query' "
      replace: 
        path: host_vars/vars.yml
        regexp: 'state: present'
        replace: 'state: query'
        before: '#EOF'

    - name: "Task 15: Change 'absent' to 'query' "
      replace: 
        path: host_vars/vars.yml
        regexp: 'state: present'
        replace: 'state: query'
        before: '#EOF'

    - name: "Task 16: Copy var file to new location"
      copy: 
        src: host_vars/vars.yml
        dest: completed_plays/{{reference}}-vars_play.yml
        mode: preserve

    - name: "Task 17: Clear AEP contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible AEP Section"
        state: absent

    - name: "Task 18: Clear CDP contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible CDP Section"
        state: absent
        
    - name: "Task 19: Clear LLDP contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible LLDP Section"
        state: absent

    - name: "Task 20: Clear Port_Channel contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible Port_Channel Section"
        state: absent

    - name: "Task 21: Clear VPC Port-Group contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible VPC Port-Group Section"
        state: absent

    - name: "Task 22: Clear Int Access Ports contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible Access Ports Section"
        state: absent

    - name: "Task 23: Clear vPC Protection_Group contents of host_vars template"
      blockinfile:
        path: host_vars/vars.yml
        marker: "# {mark} Ansible vPC Protection Group Section"
        state: absent